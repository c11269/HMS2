


/* import fonts*/
@import url(https://fonts.googleapis.com/css?family=Montserrat:400,600);

body {
    margin: 0%;
    font-family: 'montserrat', sans-serif;
}



/* Setting parameters of paragraphs and blockquotes */
p, blockquote{
    /* This will make paragraphs a little bit smaller since default is 16px = 1em. */
    font-size: .9em;
    line-height: 1.6em;
}

ul {
    /* Lets get rid of black dots that appear by default */
    list-style-type: none;
    /* Lets control the margin and padding that the bwroser chosoes for your site. */
    margin: 0%;
    padding: 0%;
}

.container {
    /* Going to center all text in the middle, which helps when scaling to diff resolutions */
    text-align: center;
    /* Lets give some padding so things are not touching edges of the screen.*/
    padding: 0.3em 1.2em 0 .6em;
}

.logo{
    /* Want to  reduce its size, don't need to adjust size based on viewport.*/
    width: 60px;
}

/*  display flex to use structure the images into invisible columns. */
header{
    display: flex;
    justify-content: space-between;
}

/* Looking to hide the desktop menu on mobile devices*/
.hide-mobile {
    display: none;
}

/* Style hamburger menu */
.menu{
    width: 25px;
    margin-top: 45%;
}

/* Can edit server image instead of class selection */
.graphic{
    width: 100%;
    /* so image is centered, by size , not by cotnent, so we shift it right to center visually.
    margin top left bot right */
    margin: 2em auto 2em auto;
    color: rgb(11, 12, 12);
}

/* same ruleset for 2 classes, and going to add style to them. */
h1, .subhead{
    /* When adding fancy circle to cut out background blue, want text to be positionned
    on top of that circle, so 'relative' helps achieve that.
    z-index of 3 means it will stack on top of the graphic. */
    position: relative;
    z-index: 3;
}

.subhead{
    font-size: 1.1em;
    color: #111111;
}

/* entire width, white text on blue background. margin is space between last container
padding is space within this container. Want to curve the top-left border radius (size of circle).
Then skew to change the angle by -2 degrees (but limit to only container, not text).
Tip: in dev F12 console, can select arrow symbol, and hover over site to see padding values*/
.blue-container {
    width: 100%;
    background: rgb(6, 132, 170);
    color: #fff;
    margin-top: 15%;
    padding: 4em 0 2em;
    border-top-left-radius: 40px;
    transform: skewY(-2deg);
}

/* We ant to make the curvy style, so we do this (common method of doing this sort of thing)
So now to style the css immediately after the main container (seen above); 
can do before too. must have content:"" property for it to work because ____.
A posiiton property with absolute can be mvoed anywhere in doc (like word). 
z-index controls the stack order, so it will sit on top of objects. 
*/
.blue-container:before {
    content: "";
    width: 40px;
    height: 40px;
    background: rgb(6, 132, 170);
    position: absolute;
    top: -39px;
    right: 0;
    z-index: -2;
}

.blue-container:after {
    content: "";
    width: 80px;
    height: 80px;
    background-color: #fff;
    top: -80px;
    position: absolute;
    right: 0;
    border-radius: 50%;
    z-index: -1;
}

/* Now only modifying the unordered list within blue-container
we will counter the -2deg skew from before */
.blue-container ul{
    transform: skewY(2deg)
}

.blue-container ul li {
    margin-bottom: 3em;
}
/* ruleset for paragraph items list item in unordered list in blue container */
.blue-container ul li p{
    padding: 0 0.5em;
}
/* ruleset for any imgs in class blue-container */
.blue-container img {
    width: 24%;
}


h2{
    margin-top: 7%;
}

/* green sign up button. calc(math) is cool. 
text-decoration none removes underlining.
font-size 1.5 is a multiplier
padding is space between text and object edge.
border radius is curvature.
position relative keeeps it scaling on diff resolutions.
z-index sets position to on top relative by giving it a high value.*/
.cta{
    background-color: #00CC80;
    width: calc(100%-1em);
    display: block;
    color: #DDDDDD;
    border-radius: 20px;
    padding: 0.5em;
    text-decoration: none;
    font-size: 1.5;
    margin: 3% auto 7%;
    position: relative;
    z-index: 4;
}

.footer-container{
    width: 100%;
    background: #3D444A;
    color: #DDDDDD;
    padding: 3em 0;
    border-top-right-radius: 40px;
}

ul.footer-links{
    margin: 0;
}
/* inline-block is a way of structure things to right/left of each other, flex as well.
 margin 0 auto is a way of centering things. */
ul.footer-links li{
    display: inline-block;
    padding: 0.4em;
}
ul.footer-links li a{
    color: #9D9D9D;
    font-size: 0.8em;
}

/* Now to style the desktop menu. May have to misspells 'hide-mobile' to see it.*/
nav ul{
    position: fixed;
    width: 60%;
    top: 0;
    right: 0;
    text-align: left;
    background: #331122;
    height: 100%;
    z-index: 7;
    padding-top: 3em;
}


nav ul li a{
    color: white;
    text-decoration: none;
    /* display block allwos us to set height and width. */
    display: block;
    width: 100%;
    padding: 1em 2em;
    background-color: rgb(49,55,59);    
}


/* to change things as you hover over them, */
nav ul li a:hover{
    background-color: #3D44AA;
}

.exit-btn{
    margin-bottom: 1em;
    margin-top: -1.3em;
    text-align: right;
    padding: 0 1.4em;
}

.exit-btn img{
    width: 15px;
    /* on hover want finger icon to show. */
    cursor: pointer;
}



/*  Styling shop items CSS /////////////////////////////////////////// */
.blue-container ul li{
    margin: 30px;
    padding-bottom: 10%;
}

.shop-item-title{
    /* send title to above the image rather than side-by-side */
    display: block;
    font-weight: bold;
    font-size: 1.4em;
    color: rgb(204, 220, 255);

}

.shop-image{
    margin: 0;
    padding: 0;
}

.shop-item-details{
    color: rgb(204, 220, 255);
}

.shop-item-price{
    color: #DDDDDD;
}

.btn {
    text-align: center;
    vertical-align: middle;
    padding: .67em .67em;
    cursor: pointer;
}

.shop-item-button{

    text-align: center;
    vertical-align: middle;
    padding: .67em .67em;
    cursor: pointer;

    background-color: #004781;
    color: #DDDDDD;
    font-size: 0.9em;
    font-weight: bold;
    border: none;
    border-radius: .3em;
    
    margin: 1% 0 1% 0;
    text-decoration: none;
    
}


/* cart-header */
.cart-head{
    font-weight: bold;
    font-size: 1.2em;
}

.cart-column{
    display: flex;
    align-items: center;
    border-bottom: 1px solid black;
    margin-right: 1.5em;
    padding-bottom: 10px;
    margin-top: 10px;
}

.cart-row{
    display: flex;
}

.cart-row:last-child {
    border-bottom: 1px solid black;
}

.cart-row:last-child .cart-column {
    border: none;
}


/* need to break out each column to align widths. */
.cart-item{
    width: 45%;
}

.cart-price{
    width: 20%;
    font-size: 1.1em;
}

.cart-quantity{
    width: 35%;    
}

.cart-item-title{
    font-size: 1.1em;
}
.cart-item-image{
    border-radius: 10px;
}

.cart-total{
    text-align: right;
}


.btn-red{
    color: white;
    background: rgb(29, 27, 27);
    border: none;
    border-radius: 3px;
    font-weight: bold;
}

.btn-red:hover {
    background-color: rgb(243, 7, 7);
}

.btn-cart-purchase{
    display: block;
    font-size: 1.1em;
    margin: 10px 0px 20px auto;
    
    text-align: center;
    vertical-align: middle;
    padding: .67em .67em;
    cursor: pointer;

    background-color: #004781;
    color: #DDDDDD;
    font-size: 0.9em;
    font-weight: bold;
    border: none;
    border-radius: .3em;
    
    text-decoration: none;

}

.cart-quantity-input {
    height: 36px;
    width: 52px;
    border-radius: 5px;
    border: 1px solid rgb(17, 26, 29);
    background-color: white;
    color: rgb(0, 0, 0);
    padding: 0;
    text-align: center;
    font-size: 1.2em;
    margin-right: 25px;
}

.cart-total {
    text-align: end;
    margin-top: 10px;
    margin-right: 10px;
}

.cart-total-title {
    font-weight: bold;
    font-size: 1.5em;
    color: black;
    margin-right: 20px;
}

.cart-total-price {
    color: #333;
    font-size: 1.1em;
}







/* Styling for different screen sizes ////////////////////////////////////////////////////////// */

/* Create a ruleset for screen resolutions bigger than 650px 
Can see pixels in F12 dev console, briefly shows when scaling the browser. */
@media only screen and (min-width: 650px){
    /* So this will overwrite and use any definitions from above from last .graphic funciton */
    .graphic{
        width: 70%;
    }
    h1{
        font-size: 3em;
        margin: 0;
    }
    .subhead{
        font-size: 1.5em;
        margin-bottom: 12%;
    }
    .blue-container {
        margin: 0;
    }
    .blue-container img{
        width: 40%;
    }
    .blue-container ul{
        /* We got enough room to put images side-by-side */
        display: flex;
        margin-top: -1em;
        align-items: top;
    }
    .blue-container ul li{
        margin-bottom: 0;
    }
    .blue-container ul li p{
        padding: 0 .8em;
    }
    nav ul{
        width: 40%;
    }
    


}


@media only screen and (min-width: 875px)  {

    .subhead {
        margin-bottom: 15%;
    }

    .blue-container ul {
        margin: 0 0 4% 0;
    }
}

@media only screen and (min-width: 1024px)  {

    .cta {
        width: 50%;
    }

    .container {
        width: 80%;
        margin: 0 auto;
    }

    /* so here we switch to desktop functions, and hide the 'hide-desktop' functions. */
    .show-desktop {
        display: block;
        margin: 0 auto 13% auto;
    }

    .hide-desktop {
        display: none;
    }

    nav ul {
        /* from fixed position to whatever its inherent one was. */
        position: inherit;
        width: auto;
        background: none;
        height: auto;
        display: flex;
        padding-top: 0;
    }

    nav ul li {
        float: left;
    }

    nav ul li a {
        color: black;
        background-color: inherit;
        text-align: right;
        padding: 1em 2em;
    }

    nav ul li a:hover {
        background-color: inherit;
    }

    .scroll {
        width: 30px;
        /* adding animation for scroll button. must use keyframes for it to work. */
        animation: move 1s infinite alternate;
        /* sometimes for animation if you don't use a build tool with an auto-prefixer, 
        then you would have to have a webkit '-webkit-aniamtion' which is a bender prefix.
        because css proeprties may work in some browsers, but not others if missing these.*/
    }

    /* I guess this dictates the exact vector of the animation move. */
    @keyframes move {
        from {
            transform: translateY(0px);
        }
        to {
            transform: translateY(20px);
        }
    }

}

@media only screen and (min-width: 1600px)  {

    .graphic {
        width: 40%;
        margin: 5em auto 4em 15%;
    }

    .container {
        width: 70%;
    }

    .blue-container {
        padding: 7em 0 2em;
    }

    .blue-container ul li p, blockquote {
        font-size: 1.3em;
    }

    h2 {
        margin-top: 4em;
    }

    .blue-container img {
        width: 15%;
    }

    .blue-container ul li:nth-child(3) img {
        width: 8%;
        margin-top: -4px;
    }

}